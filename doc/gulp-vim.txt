*gulp-vim*      Simply Gulp from Vim

For Vim version 7.0 and above       Last change: 2015-11-21

    GULP-VIM - FULL-SCREEN MODE FOR VIM IN GNU/LINUX~
                                        from Kabbaj Amine~

Mail    : amine.kabb@gmail.com
Repo    : https://github.com/KabbAmine/gulp-vim.vim
License : This file is placed in the public domain.

========================================================================
|CONTENTS|                              *gulp-vim-contents*

1. Description                                  |gulp-vim-description|
2. Installation                                 |gulp-vim-installation|
3. Usage                                        |gulp-vim-usage|
  3.1. Main commands                            |gulp-vim-usage:main|
  3.3. Misc                                     |gulp-vim-usage:|misc|
4. Configuration                                |gulp-vim-configuration|
  4.1. Rvm hack                                 |gulp-vim-configuration:rvm_hack|
  4.3. Go back to the shell prompt              |gulp-vim-configuration:shell_prompt|
  4.3. Specify gulpfile                         |gulp-vim-configuration:gulpfile|
  4.4. Use Dispatch                             |gulp-vim-configuration:dispatch|
  4.5. CtrlP default command                    |gulp-vim-configuration:ctrlp|
5. Extra                                        |gulp-vim-extra|
  5.1. Completion                               |gulp-vim-extra:completion|
6. NOTES                                        |gulp-vim-notes|

--------------------------------------------------------------------------------
DESCRIPTION                                     *gulp-vim-description*

This plugin is a simple gulp (http://gulpjs.com) wrapper for vim (Tested on GNU/Linux and Windows)

You can even use it with CtrlP (https://github.com/ctrlpvim/ctrlp.vim) if its installed.
--------------------------------------------------------------------------------
INSTALLATION                                    *gulp-vim-installation*

This is not mandatory, but the plugin can use Tpope's Dispatch plugin (https://github.com/tpope/vim-dispatch) if its installed.

# MANUALLY

Install the distributed files into Vim runtime directory which is usually `~/.vim/`, or `$HOME/vimfiles` on Windows.

# USING A PLUGIN MANAGER

And this is the recommended way, use a vim plugin manager:

* Vim-plug (https://github.com/junegunn/vim-plug)
* Vundle (https://github.com/gmarik/Vundle.vim)
* NeoBundle (https://github.com/Shougo/neobundle.vim)

--------------------------------------------------------------------------------
USAGE                                           *gulp-vim-usage*

MAIN COMMANDS                                   *gulp-vim-usage:main*

Gulp-vim provides 2 main commands: `Gulp` and `GulpExt`.
Both commands accept 0 or many arguments (Task name(s)), that can be completed using `<Tab>`).
>
  Gulp {task(s)...}
<
Execute `Gulp` inside Vim, with given task name(s) (If no task name was given `default` is used).
>
  GulpExt {task(s)...}
<
Open an external terminal (The default one via `exo-open` in GNU/Linux and a simple `cmd` in Windows) or use Dispatch plugin, then execute `Gulp` with the given task name(s) (If no task name was given `default` is used).
>
  CtrlPGulp
<
Execute gulp tasks with CtrlP (This command is provided only if ctrlp is installed).

MISC                                            *gulp-vim-usage:misc*
>
  GulpTasks

Shows a list of your gulp task names (Extracted from the current `gulpfile`).
>
  GulpFile [gulpfile]

Define the `gulpfile` to use, e.g. `gulpfile.js`, `gulpfile.coffee`, `gulpfile.babel.js` (Set it to `gulpfile.js` when used without argument).
In fact, this command just assign a value to `g:gv_default_gulpfile`.

--------------------------------------------------------------------------------
CONFIGURATION                                   *gulp-vim-configuration*

RVM HACK                                        *gulp-vim-configuration:rvm_hack*

If you're using rvm (https://rvm.io/) in GNU/Linux, when using `GulpExt` and opening a new terminal window, rvm shell functions may not be exported so your gems and some gulp plugins will not work (`gulp-compass` as an example).

To get rid of that add to your vimrc:
>
  let g:gv_rvm_hack = 1
<
GO BACK TO THE SHELL PROMPT                     *gulp-vim-configuration:shell_prompt*

By default with `GulpExt`, when the gulp task is completed, the terminal is closed.
If you want to go back to the shell prompt after executing the task, add to your vimrc:
>
  let g:gv_return_2_prompt = 1
<
Only works when `g:gv_use_dispatch=0`

SPECIFY GULPFILE                                *gulp-vim-configuration:gulpfile*

You can specify the gulpfile to use with `g:gv_default_gulpfile` variable (By default, it's `gulpfile.js`).

e.g.
>
  let g:gv_default_gulpfile = 'gulpfile.coffee'
  " Or
  let g:gv_default_gulpfile = 'gulpfile.babel.js'

USE DISPATCH                                    *gulp-vim-configuration:dispatch*

By default if the plugin Dispatch is installed, the command `GulpExt` will use `Start!` to execute Gulp, this means:

* In Linux: If you're in tmux, a new window will be created otherwise the default terminal will be open.
* In Windows: A minimized cmd.exe window is spawned.

You can disable this integration by setting `g:gv_use_dispatch` to `0`
>
    let g:gv_use_dispatch = 0
<
CTRLP DEFAULT COMMAND                           *gulp-vim-configuration:ctrlp*

You can specify which gulp-vim command to use with `CtrlpGulp` (`Gulp` by default)):
>
    let g:gv_ctrlp_cmd = 'GulpExt'
<
--------------------------------------------------------------------------------
|EXTRA|                                           *gulp-vim-extra*

COMPLETION                                      *gulp-vim-extra:completion*

The plugin searches for a gulpfile (`g:gv_default_gulpfile`) in the current vim directory (`:pwd`)
then extract from it task names to provide command completion.

--------------------------------------------------------------------------------
NOTES                                           *gulp-vim-notes*

Thanks to gulp author(s).

Thanks to Bram Moolenaar for creating the best piece of software in the world :D

Thanks to you if you're using gulp-vim.

========================================================================
vim:tw=80:ts=8:ft=help:norl:noet
